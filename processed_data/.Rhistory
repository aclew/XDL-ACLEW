by.rec.ests.xds.age$Sample <- factor(
by.rec.ests.xds.age$group_corpNE, labels = c(
"NA English", "Arg. Spanish",
"Tseltal", "UK English", "Yélî Dnye"))
by.rec.ests.xds.age$Sample <- factor(
by.rec.ests.xds.age$Sample, levels = c(
"NA English", "UK English", "Arg. Spanish",
"Tseltal", "Yélî Dnye"))
by.rec.ests.xds.age$SpkrType <- factor(
by.rec.ests.xds.age$SpkrType, levels = c(
"Women", "Men", "Children"))
xds.y.unit <- 5
by.spkrtype.ylim.max.ads.age <- by.rec.ests.xds.age %>%
group_by(age_mo_round, SpkrType) %>%
summarize(
.groups = "drop",
mean.ads_mph = ceiling(
max(mean.ads_mph)/xds.y.unit)*xds.y.unit + xds.y.unit) %>%
left_join(distinct(dplyr::select(by.rec.ests.xds.age,
c("Sample", "SpkrType"))))
ads.x.lg.age <- ggplot(by.rec.ests.xds.age, aes(
x = age_mo_round, y = mean.ads_mph,
color = Sample, fill = Sample)) +
geom_blank(data = by.spkrtype.ylim.max.ads.age, aes(
x = age_mo_round, y = mean.ads_mph,
color = Sample, fill = Sample)) +
facet_wrap(~ SpkrType, scales = "free_y") +
expand_limits(y = 0) +
scale_y_continuous(
expand = c(0, 0),
breaks = seq(0, max(
by.spkrtype.ylim.max.ads.age$mean.ads_mph), xds.y.unit)) +
scale_x_continuous(
expand = c(0, 0),
breaks = seq(0, 36, 6)) +
ylab("Mean ADS min/hr") +
xlab("Age (mo)") +
geom_smooth(method = "lm", alpha = 0.15) +
geom_jitter() +
theme_apa() +
theme(
legend.position = "none",
strip.text.x = element_blank()
)
by.spkrtype.ylim.max.tds.age <- by.rec.ests.xds.age %>%
group_by(SpkrType, age_mo_round) %>%
summarize(
.groups = "drop",
mean.tds_mph = ceiling(
max(mean.tds_mph)/xds.y.unit)*xds.y.unit
) %>%
left_join(dplyr::select(by.rec.ests.xds.age,
c("Sample", "SpkrType")))
tds.x.lg.age <- ggplot(by.rec.ests.xds.age, aes(
x = age_mo_round, y = mean.tds_mph,
color = Sample, fill = Sample)) +
geom_blank(data = by.spkrtype.ylim.max.tds.age, aes(
x = age_mo_round, y = mean.tds_mph,
color = Sample, fill = Sample)) +
facet_wrap(~ SpkrType, scales = "free_y") +
expand_limits(y = 0) +
scale_y_continuous(
expand = c(0, 0),
breaks = seq(0, max(
by.spkrtype.ylim.max.tds.age$mean.tds_mph), xds.y.unit)) +
scale_x_continuous(
expand = c(0, 0),
breaks = seq(0, 36, 6)) +
ylab("Mean TCDS min/hr") +
geom_smooth(method = "lm", alpha = 0.15) +
geom_jitter() +
theme_apa() +
theme(
axis.title.x = element_blank(),
legend.position = "none"
)
# save the figure for later
ggarrange(tds.x.lg.age, ads.x.lg.age, ncol = 1, nrow = 2,
common.legend = TRUE, legend = "bottom") %>%
ggexport(filename = "plots/XDS_age_summary.png",
width = 2500, height = 1875,
res = 300)
# show as saved
knitr::include_graphics("plots/XDS_age_summary.png")
# Overall differences between corpora
tds.rand.st.zinb.mini <- glmmTMB(round(tds_mph,0) ~
tchiyr.std + # no change with age (or slight increase)
group_corpNE + # more TCDS in WEIRD
(1|aclew_child_id),
data=quantity.rand,
# The probability of producing a structural zero
ziformula=~tchiyr.std + group_corpNE,
family="nbinom1")
# summary(tds.rand.st.zinb.mini)
# tds.rand.st.zinb.mini.res = simulateResiduals(tds.rand.st.zinb.mini)
# plot(tds.rand.st.zinb.mini.res, rank = T)
tds.rand.st.zinb.mini.disp <- round(sigma(tds.rand.st.zinb.mini), 2)
tds.rand.st.zinb.mini.COEF.age <-
coef(summary(tds.rand.st.zinb.mini))[[1]]["tchiyr.std",]
tds.rand.st.zinb.mini.COEF.spanish <-
coef(summary(tds.rand.st.zinb.mini))[[1]]["group_corpNEArg_Spanish",]
tds.rand.st.zinb.mini.COEF.tseltal <-
coef(summary(tds.rand.st.zinb.mini))[[1]]["group_corpNETseltal",]
tds.rand.st.zinb.mini.COEF.ukenglish <-
coef(summary(tds.rand.st.zinb.mini))[[1]]["group_corpNEUK_English",]
tds.rand.st.zinb.mini.COEF.yelidnye <-
coef(summary(tds.rand.st.zinb.mini))[[1]]["group_corpNEYeli_Dnye",]
# zi
tds.rand.st.zinb.mini.COEF.age.ZI <-
coef(summary(tds.rand.st.zinb.mini))[[2]]["tchiyr.std",]
tds.rand.st.zinb.mini.COEF.spanish.ZI <-
coef(summary(tds.rand.st.zinb.mini))[[2]]["group_corpNEArg_Spanish",]
tds.rand.st.zinb.mini.COEF.tseltal.ZI <-
coef(summary(tds.rand.st.zinb.mini))[[2]]["group_corpNETseltal",]
tds.rand.st.zinb.mini.COEF.ukenglish.ZI <-
coef(summary(tds.rand.st.zinb.mini))[[2]]["group_corpNEUK_English",]
tds.rand.st.zinb.mini.COEF.yelidnye.ZI <-
coef(summary(tds.rand.st.zinb.mini))[[2]]["group_corpNEYeli_Dnye",]
cds.rand.st.zinb.mini <- glmmTMB(round(cds_mph,0) ~
tchiyr.std + # no change with age (or slight increase)
group_corpNE + # more TCDS in WEIRD
(1|aclew_child_id),
data=quantity.rand,
# The probability of producing a structural zero
ziformula=~tchiyr.std + group_corpNE,
family="nbinom1")
cds.rand.st.zinb.mini <- glmmTMB(round(cds_mph,0) ~
tchiyr.std + # no change with age (or slight increase)
group_corpNE + # more TCDS in WEIRD
(1|aclew_child_id),
data=quantity.rand,
# The probability of producing a structural zero
ziformula=~tchiyr.std + group_corpNE,
family="nbinom1")
# summary(cds.rand.st.zinb.mini)
# cds.rand.st.zinb.mini.res = simulateResiduals(cds.rand.st.zinb.mini)
# plot(cds.rand.st.zinb.mini.res, rank = T)
cds.rand.st.zinb.mini.disp <- round(sigma(cds.rand.st.zinb.mini), 2)
cds.rand.st.zinb.mini.COEF.age <-
coef(summary(cds.rand.st.zinb.mini))[[1]]["tchiyr.std",]
cds.rand.st.zinb.mini.COEF.spanish <-
coef(summary(cds.rand.st.zinb.mini))[[1]]["group_corpNEArg_Spanish",]
cds.rand.st.zinb.mini.COEF.tseltal <-
coef(summary(cds.rand.st.zinb.mini))[[1]]["group_corpNETseltal",]
cds.rand.st.zinb.mini.COEF.ukenglish <-
coef(summary(cds.rand.st.zinb.mini))[[1]]["group_corpNEUK_English",]
cds.rand.st.zinb.mini.COEF.ukenglish <-
coef(summary(cds.rand.st.zinb.mini))[[1]]["group_corpNEUK_English",]
cds.rand.st.zinb.mini.COEF.yelidnye <-
coef(summary(cds.rand.st.zinb.mini))[[1]]["group_corpNEYeli_Dnye",]
# zi
cds.rand.st.zinb.mini.COEF.age.ZI <-
coef(summary(cds.rand.st.zinb.mini))[[2]]["tchiyr.std",]
cds.rand.st.zinb.mini.COEF.spanish.ZI <-
coef(summary(cds.rand.st.zinb.mini))[[2]]["group_corpNEArg_Spanish",]
cds.rand.st.zinb.mini.COEF.tseltal.ZI <-
coef(summary(cds.rand.st.zinb.mini))[[2]]["group_corpNETseltal",]
cds.rand.st.zinb.mini.COEF.ukenglish.ZI <-
coef(summary(cds.rand.st.zinb.mini))[[2]]["group_corpNEUK_English",]
cds.rand.st.zinb.mini.COEF.yelidnye.ZI <-
coef(summary(cds.rand.st.zinb.mini))[[2]]["group_corpNEYeli_Dnye",]
ads.rand.st.zinb.mini <- glmmTMB(round(ads_mph,0) ~
tchiyr.std + # decrease with age
group_corpNE + # more ADS in non-WEIRD
(1|aclew_child_id),
data=quantity.rand,
# The probability of producing a structural zero
ziformula=~tchiyr.std + group_corpNE,
family="nbinom1")
cds.rand.st.zinb.mini <- glmmTMB(round(cds_mph,0) ~
tchiyr.std + # no change with age (or slight increase)
group_corpNE + # more TCDS in WEIRD
(1|aclew_child_id),
data=quantity.rand,
# The probability of producing a structural zero
ziformula=~tchiyr.std + group_corpNE,
family="nbinom1")
# summary(cds.rand.st.zinb.mini)
# cds.rand.st.zinb.mini.res = simulateResiduals(cds.rand.st.zinb.mini)
# plot(cds.rand.st.zinb.mini.res, rank = T)
cds.rand.st.zinb.mini.disp <- round(sigma(cds.rand.st.zinb.mini), 2)
cds.rand.st.zinb.mini.COEF.age <-
coef(summary(cds.rand.st.zinb.mini))[[1]]["tchiyr.std",]
cds.rand.st.zinb.mini.COEF.spanish <-
coef(summary(cds.rand.st.zinb.mini))[[1]]["group_corpNEArg_Spanish",]
cds.rand.st.zinb.mini.COEF.tseltal <-
coef(summary(cds.rand.st.zinb.mini))[[1]]["group_corpNETseltal",]
cds.rand.st.zinb.mini.COEF.ukenglish <-
coef(summary(cds.rand.st.zinb.mini))[[1]]["group_corpNEUK_English",]
cds.rand.st.zinb.mini.COEF.yelidnye <-
coef(summary(cds.rand.st.zinb.mini))[[1]]["group_corpNEYeli_Dnye",]
# zi
cds.rand.st.zinb.mini.COEF.age.ZI <-
coef(summary(cds.rand.st.zinb.mini))[[2]]["tchiyr.std",]
cds.rand.st.zinb.mini.COEF.spanish.ZI <-
coef(summary(cds.rand.st.zinb.mini))[[2]]["group_corpNEArg_Spanish",]
cds.rand.st.zinb.mini.COEF.tseltal.ZI <-
coef(summary(cds.rand.st.zinb.mini))[[2]]["group_corpNETseltal",]
cds.rand.st.zinb.mini.COEF.ukenglish.ZI <-
coef(summary(cds.rand.st.zinb.mini))[[2]]["group_corpNEUK_English",]
cds.rand.st.zinb.mini.COEF.yelidnye.ZI <-
coef(summary(cds.rand.st.zinb.mini))[[2]]["group_corpNEYeli_Dnye",]
ads.rand.st.zinb.mini <- glmmTMB(round(ads_mph,0) ~
tchiyr.std + # decrease with age
group_corpNE + # more ADS in non-WEIRD
(1|aclew_child_id),
data=quantity.rand,
# The probability of producing a structural zero
ziformula=~tchiyr.std + group_corpNE,
family="nbinom1")
# summary(ads.rand.st.zinb.mini)
# ads.rand.st.zinb.mini.res = simulateResiduals(ads.rand.st.zinb.mini)
# plot(ads.rand.st.zinb.mini.res, rank = T)
ads.rand.st.zinb.mini.disp <- round(sigma(ads.rand.st.zinb.mini), 2)
ads.rand.st.zinb.mini.COEF.age <-
coef(summary(ads.rand.st.zinb.mini))[[1]]["tchiyr.std",]
ads.rand.st.zinb.mini.COEF.spanish <-
coef(summary(ads.rand.st.zinb.mini))[[1]]["group_corpNEArg_Spanish",]
ads.rand.st.zinb.mini.COEF.tseltal <-
coef(summary(ads.rand.st.zinb.mini))[[1]]["group_corpNETseltal",]
ads.rand.st.zinb.mini.COEF.ukenglish <-
coef(summary(ads.rand.st.zinb.mini))[[1]]["group_corpNEUK_English",]
ads.rand.st.zinb.mini.COEF.yelidnye <-
coef(summary(ads.rand.st.zinb.mini))[[1]]["group_corpNEYeli_Dnye",]
# zi
ads.rand.st.zinb.mini.COEF.age.ZI <-
coef(summary(ads.rand.st.zinb.mini))[[2]]["tchiyr.std",]
ads.rand.st.zinb.mini.COEF.spanish.ZI <-
coef(summary(ads.rand.st.zinb.mini))[[2]]["group_corpNEArg_Spanish",]
ads.rand.st.zinb.mini.COEF.tseltal.ZI <-
coef(summary(ads.rand.st.zinb.mini))[[2]]["group_corpNETseltal",]
ads.rand.st.zinb.mini.COEF.ukenglish.ZI <-
coef(summary(ads.rand.st.zinb.mini))[[2]]["group_corpNEUK_English",]
ads.rand.st.zinb.mini.COEF.yelidnye.ZI <-
coef(summary(ads.rand.st.zinb.mini))[[2]]["group_corpNEYeli_Dnye",]
ads.rand.st.zinb.mini.COEF.yelidnye.ZI <-
coef(summary(ads.rand.st.zinb.mini))[[2]]["group_corpNEYeli_Dnye",]
by.rec.ests.xds.corp <- quantity.rand.st %>%
filter(group_corp == "NA_English") %>%
group_by(corp, aclew_child_id, age_mo_round, SpkrType) %>%
summarize(
.groups = "drop",
mean.tds_mph = mean(tds_mph.st),
mean.ads_mph = mean(ads_mph.st)) %>%
mutate(
SpkrType = case_when(
SpkrType == "Woman" ~ "Women",
SpkrType == "Man" ~ "Men",
SpkrType == "Child" ~ "Children",
)
)
by.rec.ests.xds.corp$Sample <- factor(by.rec.ests.xds.corp$corp, labels = c(
"Northeastern US (Bergelson)", "Central Canada (McDivitt-Winnipeg)", "Western US (Warlaumont)"))
by.rec.ests.xds.corp$SpkrType <- factor(by.rec.ests.xds.corp$SpkrType, levels = c(
"Women", "Men", "Children"))
xds.y.unit <- 5
by.spkrtype.ylim.max.ads.corp <- by.rec.ests.xds.corp %>%
group_by(SpkrType, age_mo_round) %>%
summarize(
.groups = "drop",
mean.ads_mph = ceiling(max(mean.ads_mph)/xds.y.unit)*xds.y.unit + xds.y.unit) %>%
left_join(distinct(dplyr::select(by.rec.ests.xds.corp, c("Sample", "SpkrType"))))
ads.x.lg.corp <- ggplot(by.rec.ests.xds.corp, aes(
x = age_mo_round, y = mean.ads_mph,
color = Sample, fill = Sample)) +
geom_blank(data = by.spkrtype.ylim.max.ads.corp, aes(
x = age_mo_round, y = mean.ads_mph,
color = Sample, fill = Sample)) +
facet_wrap(~ SpkrType, scales = "free_y") +
expand_limits(y = 0) +
scale_y_continuous(
expand = c(0, 0),
breaks = seq(0, max(
by.spkrtype.ylim.max.tds.age$mean.tds_mph), xds.y.unit)) +
scale_x_continuous(
expand = c(0, 0),
breaks = seq(0, 36, 6)) +
ylab("Mean ADS min/hr") +
xlab("Age (mo)") +
geom_smooth(method = "lm", alpha = 0.15) +
geom_jitter() +
theme_apa() +
theme(
legend.position = "none",
strip.text.x = element_blank()
)
by.spkrtype.ylim.max.tds.corp <- by.rec.ests.xds.corp %>%
group_by(SpkrType, age_mo_round) %>%
summarize(
.groups = "drop",
mean.tds_mph = ceiling(max(mean.tds_mph)/xds.y.unit)*xds.y.unit
) %>%
left_join(dplyr::select(by.rec.ests.xds.corp, c("Sample", "SpkrType")))
tds.x.lg.corp <- ggplot(by.rec.ests.xds.corp, aes(
x = age_mo_round, y = mean.tds_mph,
color = Sample, fill = Sample)) +
geom_blank(data = by.spkrtype.ylim.max.tds.corp, aes(
x = age_mo_round, y = mean.tds_mph,
color = Sample, fill = Sample)) +
facet_wrap(~ SpkrType, scales = "free_y") +
expand_limits(y = 0) +
scale_y_continuous(
expand = c(0, 0),
breaks = seq(0, max(
by.spkrtype.ylim.max.tds.age$mean.tds_mph), xds.y.unit)) +
scale_x_continuous(
expand = c(0, 0),
breaks = seq(0, 36, 6)) +
ylab("Mean TCDS min/hr") +
geom_smooth(method = "lm", alpha = 0.15) +
geom_jitter() +
theme_apa() +
theme(
axis.title.x = element_blank(),
legend.position = "none"
)
# save the figure for later
ggarrange(tds.x.lg.corp, ads.x.lg.corp, ncol = 1, nrow = 2,
common.legend = TRUE, legend = "bottom") %>%
ggexport(filename = "plots/XDS_indivNAcorpus_summary.png",
width = 2500, height = 1875,
res = 300)
# show as saved
knitr::include_graphics("plots/XDS_indivNAcorpus_summary.png")
# TCDS
tds.model.results <- read_csv("TDS_random_z-inb-ALL.csv")
tds.model.results <- tds.model.results %>%
select(-effect, -group, -model) %>%
mutate(
component = case_when(
component == "cond" ~ "count",
component == "zi" ~ "zero-inflation",TRUE ~ ""),
p.value = case_when(
p.value < 0.001 ~ pval.display(p.value),
is.na(p.value) ~ "",
TRUE ~ as.character(round(p.value, 3))),
estimate = round(estimate, 3),
std.error = as.character(round(std.error, 3)),
statistic = as.character(round(statistic, 3))) %>%
replace_na(list(std.error = "", statistic = "")) %>%
arrange(component)
names(tds.model.results) <- c(
"Model component", "Term", "Estimate (B)", "Std. Error", "t-value", "p-value", "Language group reference level")
# CDS
cds.model.results <- read_csv("CDS_random_z-inb.csv")
cds.model.results <- cds.model.results %>%
select(-effect, -group, -model) %>%
mutate(
component = case_when(
component == "cond" ~ "count",
component == "zi" ~ "zero-inflation",TRUE ~ ""),
p.value = case_when(
p.value < 0.001 ~ pval.display(p.value),
is.na(p.value) ~ "",
TRUE ~ as.character(round(p.value, 3))),
estimate = round(estimate, 3),
std.error = as.character(round(std.error, 3)),
statistic = as.character(round(statistic, 3))) %>%
replace_na(list(std.error = "", statistic = "")) %>%
arrange(component)
names(cds.model.results) <- c(
"Model component", "Term", "Estimate (B)", "Std. Error", "t-value", "p-value")
# ADS
ads.model.results <- read_csv("ADS_random_z-inb-ALL.csv")
ads.model.results <- ads.model.results %>%
select(-effect, -group, -model) %>%
mutate(
component = case_when(
component == "cond" ~ "count",
component == "zi" ~ "zero-inflation",TRUE ~ ""),
p.value = case_when(
p.value < 0.001 ~ pval.display(p.value),
is.na(p.value) ~ "",
TRUE ~ as.character(round(p.value, 3))),
estimate = round(estimate, 3),
std.error = as.character(round(std.error, 3)),
statistic = as.character(round(statistic, 3))) %>%
replace_na(list(std.error = "", statistic = "")) %>%
arrange(component)
names(ads.model.results) <- c(
"Model component", "Term", "Estimate (B)", "Std. Error", "t-value", "p-value", "Language group reference level")
source("0_setup.R")
quantity.rand <- read_csv(paste0(
processed.data.path, "quantity.rand.csv"))
quantity.rand <- read_csv(paste0(
processed.data.path, "quantity.rand.csv"))
quantity.rand.bychild <- read_csv(paste0(
processed.data.path, "quantity.rand.bychild.csv"))
quantity.rand.st <- read_csv(paste0(
processed.data.path, "quantity.rand.st.csv"))
names(quantity.rand.bychild)
quantity.rand.bychild.sub <- quantity.rand.bychild %>%
select(aclew_child_id, group_corpNE, tds_mph, ocds_mph, cds_mph, ads_mph)
quantity.rand.bychild.sub
write_csv(quantity.rand.bychild.sub, "minimal-quantity.rand.bychild.csv")
quantity.rand <- read_csv(paste0(
processed.data.path, "minimal-quantity.rand.csv"))
quantity.rand.sub <- quantity.rand %>%
select(aclew_child_id, group_corp, group_corpNE, indiv_corpus,
segment, age_mo_round, tchiyr.m, n_spkrs_clip,
tds_mph, cds_mph, ads_mph)
quantity.rand.sub <- quantity.rand %>%
select(aclew_child_id, group_corp, group_corpNE,
segment, age_mo_round, tchiyr.m, n_spkrs_clip,
tds_mph, cds_mph, ads_mph)
write_csv(quantity.rand.sub, "minimal-quantity.rand.csv")
quantity.rand.st.sub <- quantity.rand.st %>%
select(aclew_child_id, group_corp, group_corpNE,
segment, age_mo_round, tchiyr.m, n_spkrs_clip.st, SpkrType,
tds_mph.st, ads_mph.st)
write_csv(quantity.rand.st.sub, "minimal-quantity.rand.st.csv")
quantity.rand.bychild.sub <- quantity.rand.bychild %>%
select(aclew_child_id, group_corpNE, tds_mph, ocds_mph, cds_mph, ads_mph)
write_csv(quantity.rand.bychild.sub, "minimal-quantity.rand.bychild.csv")
source("0_setup.R")
quantity.rand <- read_csv(paste0(
processed.data.path, "minimal-quantity.rand.csv"))
quantity.rand.bychild <- read_csv(paste0(
processed.data.path, "minimal-quantity.rand.bychild.csv"))
quantity.rand.st <- read_csv(paste0(
processed.data.path, "minimal-quantity.rand.st.csv"))
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
## Get variables ready for modeling
# Quantity rand
nspkrs.m <- mean(quantity.rand$n_spkrs_clip)
nspkrs.sd <- sd(quantity.rand$n_spkrs_clip)
quantity.rand <- quantity.rand %>%
mutate(
tchiyr.std = ((age_mo_round - tchiyr.m)/tchiyr.sd),
nsk.std = ((n_spkrs_clip - nspkrs.m)/nspkrs.sd))
nspkrs.sa.sd <- sd(quantity.rand.st$n_spkrs_clip.st)
quantity.rand <- quantity.rand %>%
mutate(
tchiyr.std = ((age_mo_round - tchiyr.m)/tchiyr.sd),
nsk.std = ((n_spkrs_clip - nspkrs.m)/nspkrs.sd))
setwd("~/Documents/GitHub/XDL-ACLEW/reproducible-manuscript/processed_data")
quantity.rand <- read_csv("quantity.rand.csv")
quantity.rand.sub <- quantity.rand %>%
select(aclew_child_id, group_corp, group_corpNE,
segment, age_mo_round, tchiyr.m, tchiyr.sd, n_spkrs_clip,
tds_mph, cds_mph, ads_mph)
write_csv(quantity.rand.sub, "minimal-quantity.rand.csv")
quantity.rand.st <- read_csv("quantity.rand.st.csv")
quantity.rand.st.sub <- quantity.rand.st %>%
select(aclew_child_id, group_corp, group_corpNE,
segment, age_mo_round, tchiyr.m, tchiyr.sd, n_spkrs_clip.st, SpkrType,
tds_mph.st, ads_mph.st)
write_csv(quantity.rand.st.sub, "minimal-quantity.rand.st.csv")
quantity.rand.bychild <- read_csv("quantity.rand.bychild.csv")
quantity.rand.bychild.sub <- quantity.rand.bychild %>%
select(aclew_child_id, group_corpNE, tds_mph, ocds_mph, cds_mph, ads_mph)
write_csv(quantity.rand.bychild.sub, "minimal-quantity.rand.bychild.csv")
setwd("~/Documents/GitHub/XDL-ACLEW/reproducible-manuscript")
source("0_setup.R")
quantity.rand <- read_csv(paste0(
processed.data.path, "minimal-quantity.rand.csv"))
quantity.rand.bychild <- read_csv(paste0(
processed.data.path, "minimal-quantity.rand.bychild.csv"))
quantity.rand.st <- read_csv(paste0(
processed.data.path, "minimal-quantity.rand.st.csv"))
## Get variables ready for modeling
# Quantity rand
nspkrs.m <- mean(quantity.rand$n_spkrs_clip)
nspkrs.sd <- sd(quantity.rand$n_spkrs_clip)
quantity.rand <- quantity.rand %>%
mutate(
tchiyr.std = ((age_mo_round - tchiyr.m)/tchiyr.sd),
nsk.std = ((n_spkrs_clip - nspkrs.m)/nspkrs.sd))
# Quantity rand by speaker type
nspkrs.sa.m <- mean(quantity.rand.st$n_spkrs_clip.st)
nspkrs.sa.sd <- sd(quantity.rand.st$n_spkrs_clip.st)
quantity.rand.st <- quantity.rand.st %>%
mutate(
tchiyr.std = ((age_mo_round - tchiyr.m)/tchiyr.sd),
nsk.st.std = ((n_spkrs_clip.st - nspkrs.sa.m)/nspkrs.sa.sd))
# add by-clip nsk scores (i.e., not divided by speaker type)
quantity.rand.st %<>%
left_join(select(quantity.rand, c(aclew_child_id, segment,
n_spkrs_clip, nsk.std)))
# NA_English as reference group
quantity.rand$group_corpNE <- factor(
quantity.rand$group_corpNE, levels = c(
"NA_English", "UK_English", "Arg_Spanish", "Tseltal", "Yeli_Dnye"))
quantity.rand.st$group_corpNE <- factor(
quantity.rand.st$group_corpNE, levels = c(
"NA_English", "UK_English", "Arg_Spanish", "Tseltal", "Yeli_Dnye"))
# Women speakers as reference group
quantity.rand.st$SpkrType <- factor(quantity.rand.st$SpkrType, levels = c(
"Woman", "Man", "Child"))
setwd("~/Documents/GitHub/XDL-ACLEW/reproducible-manuscript/processed_data")
quantity.rand <- read_csv("quantity.rand.csv")
library(tidyverse)
quantity.rand <- read_csv("quantity.rand.csv")
quantity.rand.sub <- quantity.rand %>%
dplyr::select(aclew_child_id, group_corp, group_corpNE, corp,
segment, age_mo_round, tchiyr.m, tchiyr.sd, n_spkrs_clip,
tds_mph, cds_mph, ads_mph)
write_csv(quantity.rand.sub, "minimal-quantity.rand.csv")
quantity.rand.st <- read_csv("quantity.rand.st.csv")
quantity.rand.st.sub <- quantity.rand.st %>%
dplyr::select(aclew_child_id, group_corp, group_corpNE, corp,
segment, age_mo_round, tchiyr.m, tchiyr.sd, n_spkrs_clip.st, SpkrType,
tds_mph.st, cds_mph.st, ads_mph.st)
write_csv(quantity.rand.st.sub, "minimal-quantity.rand.st.csv")
quantity.rand.bychild <- read_csv("quantity.rand.bychild.csv")
quantity.rand.bychild.sub <- quantity.rand.bychild %>%
dplyr::select(aclew_child_id, group_corpNE, tds_mph, ocds_mph, cds_mph, ads_mph)
write_csv(quantity.rand.bychild.sub, "minimal-quantity.rand.bychild.csv")
names(quantity.rand.bychild.sub)
names(quantity.rand.st.sub)
